Easy way to understand how to occur "stack smashing detected" alert. I am going to demonstrate how can we fall into this situation. Let me simply explain with an example.  

#include<stdio.h>
int main()
{
        int a[5];
        for(int i=0; i<7; i++)
        {
                a[i]=i;
                printf("%d\n",a[i]);
        }
        return 0;
}


1) Initially we declared an array which have size of 5 and after that run a loop for the defining value. 
	int a[5];
	for(int i=0; i<7; i++)
        {
                a[i]=i;
                printf("%d\n",a[i]);
        }

2) The last write return type as "return 0;". If you debug this code in linux terminal you will get it probably      

   like this ;


	0
	1
	2
	3
	4
	5
	6
	*** stack smashing detected ***: <unknown> terminated

	Program received signal SIGABRT, Aborted.
	__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
	50	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.


3) In fact this is an information about that where is the problem and what should i do ? 
   
   We have to decrease size of for loop at this point because, size of loop is greater than size of array we set therefore we get an overflow.

    
   

